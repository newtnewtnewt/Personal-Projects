#!/bin/busybox sh

# Mount the virtual proc and sys file systems. 
/bin/busybox mount -t proc proc /proc
/bin/busybox mount -t sysfs sysfs /sys

# Populate the /dev and /dev/pts with devices detected upon startup
/bin/busybox mount -t devpts devpts /dev/pts
/bin/busybox mdev -s

# Startup klogd to log kernel messages
/bin/klogd -c 5

# Startup syslog to log system messages
/bin/syslogd

# Setup networking on the guest

# First load the device driver assuming default e1000 nic in qemu
/bin/busybox insmod /lib64/e1000.ko.xz

# First bring up the default loopback device lo
ifconfig lo up

# The above driver creates entry for eth0 device. Bring up the eth0
# device
ifconfig eth0 up

# Now that we have a eth0 we can use that one to talk to qemu's dhcp
# server to get an IP address for eth0.  We request a specific IP to
# keep this script simple
/bin/busybox udhcpc -i eth0 -r 10.0.2.15

# Now set the above IP for the eth0
ifconfig eth0 10.0.2.15 netmask 255.255.255.0

# Finally setup a default gateway to route all IP traffic onto
# qemu's virtual gateway at fixed IP 10.0.2.2
busybox route add default gw 10.0.2.2

#Time to add some wacko print messages
echo 'The Grid. A digital frontier. I tried to picture clusters of information as they moved through the computer. What did they look like? Ships, motorcycles? Were the circuits like freeways? I kept dreaming of a world I thought Id never see. And then, one day I got in...'

echo '    .___                                  ________   '
echo '__| _/_ __  ____   ____   ____   _____  \_____  \\'
echo ' / __ |  |  \/    \ /    \ /    \ /     \  /  ____/  '
echo '/ /_/ |  |  /   |  \   |  \   |  \  Y Y  \/       \ '
echo '\____ |____/|___|  /___|  /___|  /__|_|  /\_______ \\'
echo '     \/          \/     \/     \/      \/         \/ '

